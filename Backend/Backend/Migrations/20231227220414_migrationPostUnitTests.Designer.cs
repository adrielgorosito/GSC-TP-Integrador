// <auto-generated />
using System;
using Backend.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(LoanDbContext))]
    [Migration("20231227220414_migrationPostUnitTests")]
    partial class migrationPostUnitTests
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateOnly(1, 1, 1),
                            Description = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateOnly(1, 1, 1),
                            Description = "Furniture"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateOnly(1, 1, 1),
                            Description = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateOnly(1, 1, 1),
                            Description = "Books"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateOnly(1, 1, 1),
                            Description = "Home Appliances"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("PersonDni")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ReturnDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("ThingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonDni");

                    b.HasIndex("ThingId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2023, 12, 1),
                            PersonDni = 42125750,
                            ReturnDate = new DateOnly(2023, 12, 3),
                            Status = 2,
                            ThingId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2023, 12, 2),
                            PersonDni = 42000000,
                            Status = 1,
                            ThingId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(2023, 12, 3),
                            PersonDni = 42123456,
                            ReturnDate = new DateOnly(2023, 12, 5),
                            Status = 2,
                            ThingId = 3
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(2023, 12, 4),
                            PersonDni = 42125750,
                            Status = 1,
                            ThingId = 4
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateOnly(2023, 12, 5),
                            PersonDni = 42000000,
                            Status = 1,
                            ThingId = 5
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateOnly(2023, 12, 6),
                            PersonDni = 42123456,
                            Status = 1,
                            ThingId = 6
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateOnly(2023, 12, 7),
                            PersonDni = 42125750,
                            ReturnDate = new DateOnly(2023, 12, 11),
                            Status = 2,
                            ThingId = 7
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateOnly(2023, 12, 8),
                            PersonDni = 42000000,
                            Status = 1,
                            ThingId = 8
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateOnly(2023, 12, 9),
                            PersonDni = 42123456,
                            ReturnDate = new DateOnly(2023, 12, 20),
                            Status = 3,
                            ThingId = 9
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateOnly(2023, 12, 10),
                            PersonDni = 42125750,
                            Status = 1,
                            ThingId = 2
                        });
                });

            modelBuilder.Entity("Backend.Domain.Person", b =>
                {
                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Dni");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Dni = 42125750,
                            EmailAddress = "adrielgorosito14@gmail.com",
                            Name = "Adriel",
                            PhoneNumber = "3476123456"
                        },
                        new
                        {
                            Dni = 42000000,
                            EmailAddress = "betorc@gsc.com",
                            Name = "Beto",
                            PhoneNumber = "341123456"
                        },
                        new
                        {
                            Dni = 42123456,
                            EmailAddress = "walter@gsc.com",
                            Name = "Walter",
                            PhoneNumber = "341654321"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Thing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("Things");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Notebook"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Smartphone"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Sofa"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "T-shirt"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Jeans"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Sweater"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Socks"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Shorts"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Description = "Speaker"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Loan", b =>
                {
                    b.HasOne("Backend.Domain.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonDni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.Thing", "Thing")
                        .WithMany()
                        .HasForeignKey("ThingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Thing");
                });

            modelBuilder.Entity("Backend.Domain.Thing", b =>
                {
                    b.HasOne("Backend.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
